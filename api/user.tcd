
//用户类型
enum UserType(int) {

    //正常用户
    Normal = 0

    //客服，客服部门
    CSD = 1
}

//性别
enum Gender {
    Male
    Female
    Unknown
}

type User {
    //账户信息
    AccountId uint64

    //应用ID
	AppId uint64

	//云用户ID
	CloudId uint64

    //租户用户ID，不允许修改、不允许超过32位
	TenantUserId string

	//用户昵称，可以用于搜索
	NickName string empty

    //座右铭，个性签名
	Motto string empty

	//用户头像
	Face string empty

    //性别
    Gender Gender empty

    //用户类型
    Type UserType

	//用户属性
	Attrs  map[string]string  empty

	//创建时间
	CreateTime string empty

	//更新时间
	UpdateTime string empty
}

type SearchUser {
    AccountId uint64
    AppID uint64
    StartId uint64
    Limit int
}

type TokenRequest {
    //账户信息
    AccountId uint64

    //应用ID
    AppId uint64

    //集群ID
    CloudId uint64

    //用户使用的登录的IP地址
    IPAddress string

    //linker 用户连接那个服务
    Linker string

    //过期时间，不用过期不填写
    ExpireTime string empty
}

type TokenResponse {
    //用户token
    Token string

    //linker 用户连接那个服务
    Linker string

    //过期时间，不用过期不填写
    ExpireTime string empty
}

errors {
    UserExists(3001,用户已存在)
    UserNotExists(3002,用户不存在)
    TokenNotExists(3003,Token不存在)
}

service UserService(3000) {

    //添加用户或者更新用户信息
    AddUser(user User) ()

    //根据租户给定的用户ID获取用户
    GetByTenantUserId(accountId uint64, appId uint64, tenantUserId string) (User)

    //根据clusterId获取用户
    GetByCloudId(accountId uint64, appId uint64, cloudId uint64) (User)

    //更新用户信息，仅允许单个属性更新
    ModifyUser(accountId uint64, appId uint64, clusterId uint64, modifyKey string, modifyValue []byte) ()

    //获取登录token,string
    RequestLoginToken(tokenReq TokenRequest) (TokenResponse)

    //获取用户token
    GetToken(accountId uint64, appId uint64, clusterId uint64) (TokenResponse)
}


